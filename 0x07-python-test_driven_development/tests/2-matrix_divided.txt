>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> import sys

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> matrix_divided(matrix, 3)
[[1.33, 1.67, 2.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, -3)
[[-1.33, -1.67, -2.0], [-1.33, -1.67, -2.0]]
>>> matrix_divided(matrix, 10)
[[0.4, 0.5, 0.6], [0.4, 0.5, 0.6]]
>>> matrix_divided(matrix, -10)
[[-0.4, -0.5, -0.6], [-0.4, -0.5, -0.6]]
>>> matrix_divided(matrix, 3.14)
[[1.27, 1.59, 1.91], [1.27, 1.59, 1.91]]
>>> matrix_divided(matrix, -3.14)
[[-1.27, -1.59, -1.91], [-1.27, -1.59, -1.91]]
>>> matrix_divided(matrix, "School")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 25, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/vagrant/holbertonschool-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 27, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> matrix = [[1, 2, 3], [4, 5]]
>>> try:
...     matrix_divided(matrix, 3)
... except Exception as e:
...     print(e)
...
 Each row of the matrix must have the same size
